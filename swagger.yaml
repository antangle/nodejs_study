swagger: "2.0"
info:
  description: "hello world"
  version: "1.0.0"
  title: "my api-doc"
host: "localhost:9000"
basePath: "/"
tags:
- name: "buy"
  description: "Everything about your buys"
- name: "landingPage"
  description: "Access to buystore orders"
schemes:
- "http"
paths:
  /buy/getPhonesByBrand:
    get:
      tags:
      - "buy"
      summary: "Finds phones by brand"
      description: "at buy/1/brand"
      operationId: "getPhonesByBrand"
      produces:
      - "application/json"
      parameters:
      - name: "phone_brand"
        in: "query"
        description: ""
        required: true
        type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
  /buy/getPhonesFromDB:
    get:
      tags:
      - "buy"
      summary: "Finds phones with nickname"
      description: "at buy/1/brand"
      operationId: "getPhonesFromDb"
      produces:
      - "application/json"
      parameters:
      - name: "nickname"
        in: "query"
        description: ""
        required: false
        type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
  /buy/buyNextStep1:
    post:
      tags:
      - "buy"
      summary: "Updates a buy at step1 with data"
      description: ""
      operationId: "buyNextStep1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "nickname"
        in: "query"
        type: "string"
        description: "Updated phone_name at step1"
        required: true
      - name: "phone_name"
        in: "query"
        description: "Updated phone_name at step1"
        required: true
        type: "string"
      - name: "phone_brand"
        in: "query"
        description: "Updated phone_brand at step1"
        required: true
        type: "string"
      responses:
        "405":
          description: "Invalid input"
  /buy/getColorVolumeByPhone:
    get:
      tags:
      - "buy"
      summary: "Finds color, volume with nickname"
      description: "at step2"
      operationId: "getColorVolumeByPhone"
      produces:
      - "application/json"
      parameters:
      - name: "nickname"
        in: "query"
        description: ""
        required: true
        type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
        "201":
          description: "success"
        "400":
          description: "Invalid status value"
  /buy/buyNextStep2:
    post:
      tags:
      - "buy"
      summary: "Updates a buy at step2 with data"
      description: ""
      operationId: "buyNextStep2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "nickname"
        in: "query"
        type: "string"
        description: "nickname used for searching temp_bid at step2"
        required: true
      - name: "color_name"
        in: "query"
        description: "Updated color_name at step2"
        required: true
        type: "string"
      - name: "phone_volume"
        in: "query"
        description: "Updated phone_volume at step2"
        required: true
        type: "string"
      responses:
        "201":
          description: "success"
        "405":
          description: "Invalid input"
  /buy/buyNextStep3:
    post:
      tags:
      - "buy"
      summary: "Updates a buy at step3 with data"
      description: ""
      operationId: "buyNextStep3"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "nickname"
        in: "query"
        type: "string"
        description: "nickname used for searching temp_bid at step3"
        required: true
      - name: "current_carrier"
        in: "query"
        description: "Updated current_carrier at step3"
        required: true
        type: "string"
      - name: "want_carrier"
        in: "query"
        description: "Updated want_carrier at step3"
        required: true
        type: "string"
      - name: "want_plan"
        in: "query"
        description: "Updated want_plan at step3"
        required: true
        type: "string"
      - name: "want_payment_period"
        in: "query"
        description: "Updated want_payment_period at step3"
        required: true
        type: "string"
      - name: "contract"
        in: "query"
        description: "Updated contract at step3"
        required: true
        type: "string"
      - name: "want_contract_period"
        in: "query"
        description: "Updated want_contract_period at step3"
        required: true
        type: "string"
      - name: "return_phone"
        in: "query"
        description: "Updated return_phone at step3"
        required: true
        type: "string"
      - name: "six_month_payment_plan"
        in: "query"
        description: "Updated six_month_payment_plan at step3"
        required: true
        type: "string"
      - name: "affiliate_card"
        in: "query"
        description: "Updated affiliate_card at step3"
        required: true
        type: "string"  
      responses:
        "201":
          description: "success"
        "405":
          description: "Invalid input"
  /landing:
    get:
      tags:
      - "landingPage"
      summary: "get all userlist"
      description: "get landing userlist"
      operationId: "getLandingPage"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
    post:
      tags:
      - "landingPage"
      summary: "gets name, phone_num, email"
      description: "at landingpage"
      operationId: "landing"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: ""
        required: true
        type: "string"
        collectionFormat: "multi"
      - name: "phone_num"
        in: "query"
        description: ""
        required: true
        type: "string"
        collectionFormat: "multi"
      - name: "email"
        in: "query"
        description: ""
        required: true
        type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      buyId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  buy:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "buy status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "buy"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"