swagger: "2.0"
info:
  description: "hello world"
  version: "1.0.0"
  title: "my api-doc"
host: "localhost:9000"
basePath: "/"
tags:
- name: "buy"
  description: "Everything about your buys"
- name: "landingPage"
  description: "landingPage"
schemes:
- "http"
paths:
  /buy/getStep1Latest:
    get:
      tags:
      - "buy"
      summary: "get 6 phones at /web/buy/1"
      description: "if you already did a selection, you also get the selected output"
      operationId: "getStep1Latest"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        description: "지금은 그냥 user_id = 1 로 생각하셈"
        required: true
        type: "integer"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
        "101":
          description: "Invalid status value"
  /buy/getStep1WithBrand:
    get:
      tags:
      - "buy"
      summary: "Finds devices with brand_id"
      description: "at buy/1/brand"
      operationId: "getStep1WithBrand"
      produces:
      - "application/json"
      parameters:
      - name: "brand_id"
        in: "query"
        description: "1: Samsung, 2: Apple, 3:LG, 4:Others"
        required: true
        type: "integer"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
  /buy/postSaveStep1:
    post:
      tags:
      - "buy"
      summary: "save data from step 1"
      description: "step=1, state=1, update(or insert) user_id, device_id"
      operationId: "postSaveStep1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        description: "give current user_id"
        required: true
        type: "integer"
        collectionFormat: "multi"
      - name: "device_id"
        in: "query"
        description: "give the selected device's id"
        required: true
        type: "integer"
        collectionFormat: "multi"
      responses:
        "405":
          description: "Invalid input"
  /buy/getStep2ColorVolume:
    get:
      tags:
      - "buy"
      summary: "Finds device color and volume with user_id"
      description: "at buy/2"
      operationId: "getStep2ColorVolume"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        description: "agency(1:SKT ,2:KT, 3:LG, 4:알뜰) volume은 그냥 int형으로!\n 지금은 device_id = 1,2만 다르고 다른건 다 device_id=1꺼 복붙해놓음"
        required: true
        type: "integer"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
  /buy/postSaveStep2:
    post:
      tags:
      - "buy"
      summary: "save data from step 2"
      description: "Update device_detail_id(info about color, volume etc)"
      operationId: "postSaveStep2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        description: "give current user_id"
        required: true
        type: "integer"
        collectionFormat: "multi"
      - name: "device_detail_id"
        in: "query"
        description: "give the selected device_detail's id"
        required: true
        type: "integer"
        collectionFormat: "multi"
      responses:
        "405":
          description: "Invalid input"
  /buy/getStep3Info:
    get:
      tags:
      - "buy"
      summary: "Finds selected device and color contraint(agency) with user_id"
      description: "at buy/3\n아직 요금제(payment)에 관해선 안정해놔서 안나옴!"
      operationId: "getStep3Info"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        description: "agency(1:SKT ,2:KT, 3:LG, 4:알뜰)"
        required: true
        type: "integer"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
  /buy/postSaveStep3:
    post:
      tags:
      - "buy"
      summary: "save data from step 3"
      description: "Update auction(with info on step3 and device_detail_id, user_id)"
      operationId: "postSaveStep3"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        description: "give current user_id"
        required: true
        type: "integer"
        collectionFormat: "multi"
      - name: "agency_use"
        in: "query"
        description: "현재 통신사"
        required: true
        type: "integer"
        collectionFormat: "multi"
      - name: "agency_hope"
        in: "query"
        description: "사용희망 통신사"
        required: true
        type: "integer"
        collectionFormat: "multi"
      - name: "period"
        in: "query"
        description: "할부기간"
        required: true
        type: "integer"
        collectionFormat: "multi"
      - name: "contract_list"
        in: "query"
        description: "고급옵션: '1,1,2,2,1,2,1' 이런식으로 줄것"
        required: true
        type: "string"
        collectionFormat: "multi"
      responses:
        "405":
          description: "Invalid input"
  /landing:
    get:
      tags:
      - "landingPage"
      summary: "get all userlist"
      description: "get landing userlist"
      operationId: "getLandingPage"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
    post:
      tags:
      - "landingPage"
      summary: "gets name, phone_num, email"
      description: "at landingpage"
      operationId: "landing"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: ""
        required: true
        type: "string"
        collectionFormat: "multi"
      - name: "phone_num"
        in: "query"
        description: ""
        required: true
        type: "string"
        collectionFormat: "multi"
      - name: "email"
        in: "query"
        description: ""
        required: true
        type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      buyId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  buy:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "buy status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "buy"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"